// <auto-generated />
using System;
using General.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace General.Mvc.Migrations
{
    [DbContext(typeof(GeneralDbContext))]
    partial class GeneralDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("General.Entities.Category.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("CssClass");

                    b.Property<string>("FatherID");

                    b.Property<string>("FatherResource");

                    b.Property<bool>("IsDisabled");

                    b.Property<bool>("IsMenu");

                    b.Property<string>("Name");

                    b.Property<string>("ResouceID");

                    b.Property<string>("RouteName");

                    b.Property<int>("Sort");

                    b.Property<string>("SysResource");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("General.Entities.Role.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("General.Entities.SysPermission.SysPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid>("Creator");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Creator");

                    b.HasIndex("RoleId");

                    b.ToTable("SysPermission");
                });

            modelBuilder.Entity("General.Entities.SysRole.SysRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid>("Creator");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<Guid?>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("General.Entities.SysUser.SysUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired();

                    b.Property<DateTime?>("AllowLoginTime");

                    b.Property<byte[]>("Avatar");

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("Creator");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("Email");

                    b.Property<bool>("Enabled");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastActivityTime");

                    b.Property<string>("LastIpAddress")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<int>("LoginFailedNum");

                    b.Property<bool>("LoginLock");

                    b.Property<string>("MobilePhone");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<Guid?>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<string>("Salt");

                    b.Property<string>("Sex")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("General.Entities.SysUserLoginLog.SysUserLoginLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IpAddress");

                    b.Property<DateTime>("LoginTime");

                    b.Property<string>("Message");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SysUserLoginLog");
                });

            modelBuilder.Entity("General.Entities.SysUserRole.SysUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("SysUserRole");
                });

            modelBuilder.Entity("General.Entities.SysUserToken.SysUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpireTime");

                    b.Property<Guid>("SysUserId");

                    b.HasKey("Id");

                    b.HasIndex("SysUserId");

                    b.ToTable("SysUserToken");
                });

            modelBuilder.Entity("General.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("General.Entities.SysPermission.SysPermission", b =>
                {
                    b.HasOne("General.Entities.Category.Category", "Category")
                        .WithMany("SysPermissions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("General.Entities.SysUser.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("General.Entities.SysRole.SysRole", "SysRole")
                        .WithMany("SysPermission")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("General.Entities.SysRole.SysRole", b =>
                {
                    b.HasOne("General.Entities.SysUser.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("General.Entities.SysUser.SysUser", "SysUser1")
                        .WithMany()
                        .HasForeignKey("Modifier");
                });

            modelBuilder.Entity("General.Entities.SysUserLoginLog.SysUserLoginLog", b =>
                {
                    b.HasOne("General.Entities.SysUser.SysUser", "SysUser")
                        .WithMany("SysUserLoginLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("General.Entities.SysUserRole.SysUserRole", b =>
                {
                    b.HasOne("General.Entities.SysRole.SysRole", "SysRole")
                        .WithMany("SysUserRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("General.Entities.SysUser.SysUser", "SysUser")
                        .WithMany("SysUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("General.Entities.SysUserToken.SysUserToken", b =>
                {
                    b.HasOne("General.Entities.SysUser.SysUser", "SysUser")
                        .WithMany("SysUserTokens")
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
